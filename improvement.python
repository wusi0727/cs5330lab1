import cv2
import numpy as np
from scipy.signal import medfilt

def cal_skyline(mask):
    h, w = mask.shape
    for i in range(w):
        col = mask[:, i]
        after_median = medfilt(col, 19)
        try:
            first_zero_index = np.where(after_median == 0)[0][0]
            first_one_index = np.where(after_median == 1)[0][0]
            if first_zero_index > 20:
                mask[first_one_index:first_zero_index, i] = 1
                mask[first_zero_index:, i] = 0
                mask[:first_one_index, i] = 0
        except:
            continue
    return mask

def get_sky_region_gradient(img):
    img_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    img_gray = cv2.blur(img_gray, (9, 3))
    cv2.medianBlur(img_gray, 5)
    lap = cv2.Laplacian(img_gray, cv2.CV_8U)
    gradient_mask = (lap < 6).astype(np.uint8)

    kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (9, 3))
    mask = cv2.morphologyEx(gradient_mask, cv2.MORPH_ERODE, kernel)

    mask = cal_skyline(mask)
    after_img = cv2.bitwise_and(img, img, mask=mask)

    return after_img


# Load your image
img = cv2.imread('skyImages/18.jpg')

# Get the sky region
sky_region = get_sky_region_gradient(img)

# Display or process the sky_region as needed
# For example, to display using OpenCV:
cv2.imshow("Sky Region", sky_region)
cv2.waitKey(0)
cv2.destroyAllWindows()

